/*
 * Copyright 2002, 2009 Seanodes Ltd http://www.seanodes.com. All rights
 * reserved and protected by French, UK, U.S. and other countries' copyright laws.
 * This file is part of Exanodes project and is subject to the terms
 * and conditions defined in the LICENSE file which is present in the root
 * directory of the project.
 */

#ifndef _EXA_ERROR_H
#define _EXA_ERROR_H

#ifdef __cplusplus
extern "C" {
#endif



#define EXA_MAXSIZE_ERR_MESSAGE 127	/* The max size of a error message */

/** IMPORTANT: IF YOU ADD AN ERROR HERE, IT MUST ALSO BE ADDED IN
 *             common/lib/common.c
 *
 */
enum exa_error_code {
  EXA_LAST_ERROR        = -1,		/* Only used to limit the last line in error_msg */
  EXA_SUCCESS           = 0,		/* Generic return value indicating success       */
  EXA_ERR_DEFAULT       = 0x101,	/* The first set of error are the one returned from CLI exit */
  VRT_ERR_NOT_ENOUGH_FREE_SC,
  EXA_ERR_ADM_BUSY,
  ADMIND_ERR_NODE_DOWN,
  ADMIND_WARNING_FORCE_DISABLED,
  EXA_ERR_DUMMY_END_OF_CLI_SECTION,	/* ===== Dummy error, mark the end of CLI exit error code ===== */
  EXA_ERR_BAD_INSTALL,
  EXA_ERR_CMD_PARSING,
  EXA_ERR_OPEN_FILE,
  EXA_ERR_CLOSE_FILE,
  EXA_ERR_WRITE_FILE,
  EXA_ERR_READ_FILE,
  EXA_ERR_EXEC_FILE,
  EXA_ERR_XML_INIT,
  EXA_ERR_XML_GET,
  EXA_ERR_XML_ADD,
  EXA_ERR_XML_PARSE,
  EXA_ERR_IOCTL,
  EXA_ERR_CREATE_SOCKET,
  EXA_ERR_CONNECT_SOCKET,
  EXA_ERR_INVALID_PARAM,
  EXA_ERR_INVALID_VALUE,
  EXA_ERR_CANT_GET_MINOR,
  EXA_ERR_NOT_BLOCK_DEV,
  EXA_ERR_ADMIND_NOCONFIG,
  EXA_ERR_ADMIND_STOPPED,
  EXA_ERR_ADMIND_STARTING,
  EXA_ERR_ADMIND_STARTED,
  EXA_ERR_ADMIND_STOPPING,
  EXA_ERR_BAD_PROTOCOL,
  EXA_ERR_MODULE_OPEN,
  EXA_ERR_SERVICE_PARAM_UNKNOWN,
  EXA_ERR_LOCK_CREATE,
  EXA_ERR_UUID,
  EXA_ERR_VERSION,
  EXA_ERR_NOT_FOUND,
  EXA_ERR_THREAD_CREATE,
  EXA_ERR_EXPORT_NOT_FOUND,
  EXA_ERR_EXPORT_WRONG_METHOD,
  NET_ERR_INVALID_IP,
  NET_ERR_INVALID_HOST,
  VRT_ERR_GROUPNAME_USED,
  VRT_ERR_UNKNOWN_LAYOUT,
  VRT_ERR_RDEV_ALREADY_USED,
  VRT_ERR_NB_RDEVS_IN_GROUP,
  VRT_ERR_RDEV_TOO_SMALL,
  VRT_ERR_NO_SUCH_RDEV_IN_GROUP,
  VRT_ERR_NO_RDEV_IN_GROUP,
  VRT_ERR_NO_RDEV_TO_READ,
  VRT_ERR_NOT_ENOUGH_RDEVS,
  VRT_ERR_OLD_RDEVS_MISSING,            /* Real devices are missing to start the group */
  VRT_ERR_GROUP_NOT_STARTED,
  VRT_ERR_GROUP_NOT_STOPPED,
  VRT_ERR_GROUP_NOT_ADMINISTRABLE,
  VRT_ERR_VOL_NOT_STOPPED_IN_GROUP,
  VRT_ERR_TOO_MANY_CHUNKS,
  VRT_ERR_DIRTY_ZONE_TOO_SMALL,
  VRT_ERR_SB_CORRUPTION,
  VRT_ERR_SB_UUID_MISMATCH,
  VRT_ERR_SB_FORMAT,
  VRT_ERR_SB_MAGIC,
  VRT_ERR_SB_NOT_FOUND,
  VRT_ERR_SB_CHECKSUM,
  VRT_ERR_VOLUMENAME_USED,
  VRT_ERR_UNKNOWN_VOLUME_UUID,
  VRT_ERR_VOLUME_IS_PRIVATE,
  VRT_ERR_VOLUME_NOT_STARTED,
  VRT_ERR_VOLUME_NOT_STOPPED,
  VRT_ERR_VOLUME_NOT_EXPORTED,
  VRT_ERR_RDEV_DOWN,
  VRT_ERR_CANT_DGDISKRECOVER,
  VRT_ERR_GROUP_FRAGMENTATION,
  VRT_ERR_GROUP_TOO_SMALL,
  VRT_ERR_DISK_REPLACEMENT_NOT_SUPPORTED,
  VRT_ERR_CANT_REBUILD,
  VRT_ERR_GROUP_OFFLINE,
  VRT_ERR_VOLUME_ALREADY_STARTED,
  VRT_ERR_VOLUME_ALREADY_EXPORTED,
  VRT_ERR_UNKNOWN_GROUP_UUID,
  VRT_ERR_UNKNOWN_DISK_UUID,
  VRT_ERR_LAYOUT_UNKNOWN_OPERATION,
  VRT_ERR_DISK_NOT_LOCAL,
  VRT_ERR_NB_VOLUMES_CREATED,
  VRT_ERR_NB_VOLUMES_STARTED,
  VRT_ERR_VOLUME_IS_IN_USE,
  VRT_WARN_GROUP_OFFLINE,
  VRT_ERR_PREVENT_GROUP_OFFLINE,
  VRT_ERR_CANNOT_DELETE_NODE,
  VRT_ERR_LAYOUT_CONSTRAINTS_INFRINGED,
  VRT_ERR_REBUILD_INTERRUPTED,
  NBD_ERR_SERVERD_INIT,
  NBD_ERR_NB_SNODES_CREATED,
  NBD_ERR_UNKNOWN_SNODENAME,
  NBD_ERR_NB_RDEVS_CREATED,
  NBD_ERR_CANT_GET_MINOR,
  NBD_ERR_UNKNOWN_NET,
  NBD_ERR_CLOSED_SESSION,
  NBD_ERR_NO_SESSION,
  NBD_ERR_EXISTING_SESSION,
  NBD_ERR_SERVER_REFUSED_CONNECTION,
  NBD_ERR_SNODE_NET_CLEANUP,
  NBD_ERR_THREAD_CREATION,
  NBD_ERR_MALLOC_FAILED,
  NBD_ERR_BAD_STATE,
  NBD_ERR_NO_CONNECTION,
  NBD_ERR_MOD_SESSION,
  NBD_ERR_SET_SIZE,
  NBD_ERR_REMOVE_NDEV,
  NBD_ERR_EXISTING_CLIENT,
  NBD_ERR_CLIENTS_NUMBER_EXCEEDED,
  NBD_WARN_EXPORT_FAILED,
  NBD_WARN_OPEN_SESSION_FAILED,
  FS_ERR_INVALID_FILESYSTEM,
  FS_ERR_MOUNTPOINT_USED,
  FS_ERR_MOUNT_ERROR,
  FS_ERR_NB_LOGS_EXCEEDED,
  FS_ERR_INVALID_GULM_MASTERS_LIST,
  FS_ERR_INVALID_MOUNTPOINT,
  FS_ERR_IMPOSSIBLE_MOUNTPOINT,
  FS_WARN_MOUNTED_READONLY,
  FS_ERR_LOAD_MODULE,
  FS_ERR_FSCK_ERROR,
  FS_ERR_EXECUTION_ERROR,
  FS_ERR_TIME_OUT,
  FS_ERR_MKFS_ERROR,
  FS_ERR_MKFS_SIZE_ERROR,
  FS_ERR_UMOUNT_ERROR,
  FS_ERR_RESIZE_NEED_MOUNT_RW,
  FS_ERR_RESIZE_NEED_UMOUNT,
  FS_ERR_RESIZE_SHRINK_NOT_POSSIBLE,
  FS_ERR_RESIZE_NOT_ENOUGH_SPACE,
  FS_ERR_STOP_WITH_VOLUME_DOWN,
  FS_ERR_CHECK_NODE_DOWN,
  FS_ERR_CHECK_ERRORS_CORRECTED,
  FS_ERR_CHECK_ERRORS,
  FS_ERR_CHECK_OPERATIONAL_ERROR,
  FS_ERR_CHECK_USAGE_ERROR,
  FS_ERR_HANDLE_GFS,
  FS_ERR_LOCAL_RW_ONE_NODE,
  FS_ERR_RW_TO_RO,
  FS_ERR_RO_TO_RW,
  FS_ERR_CHANGE_MOUNTPOINT,
  FS_ERR_FSCK_STARTED,
  FS_ERR_UNKNOWN_TUNE_OPTION,
  FS_ERR_LESS_LOGS,
  FS_ERR_INCREASE_LOGS,
  FS_ERR_INCREASE_LOGS_NEED_MOUNT_RW,
  FS_ERR_FORMAT_MOUNT_OPTION,
  FS_ERR_MOUNT_OPTION_NEEDS_FS_STOPPED,
  FS_ERR_GFS_CANNOT_DELETE_MASTER,
  FS_ERR_GFS_MUST_CHANGE_MASTER,
  CMD_EXP_ERR_OPEN_DEVICE,
  CMD_EXP_ERR_CLOSE_DEVICE,
  CMD_EXP_ERR_UNKNOWN_DEVICE,
  CMD_STR_RESULT_IS_TOO_LARGE,
  ADMIND_ERR_ALREADY_RUNNING,
  ADMIND_ERR_MODULESTART,
  ADMIND_ERR_MODULESTOP,
  ADMIN_ERR_FSDSTART,
  ADMIN_ERR_FSDSTOP,
  ADMIN_ERR_CSUPDSTOP,
  ADMIN_ERR_CSUPDSTART,
  ADMIND_ERR_EXAMSGDSTART,
  ADMIND_ERR_EXAMSGDSTOP,
  ADMIND_ERR_NOTHINGTODO,
  ADMIND_ERR_NOTLEADER,
  ADMIND_ERR_INRECOVERY,
  ADMIND_ERR_QUORUM_TIMEOUT,
  ADMIND_ERR_QUORUM_PRESERVE,
  ADMIND_WARNING_NODE_IS_DOWN,
  ADMIND_ERR_VOLUME_IN_FS,
  ADMIND_ERR_GROUP_NOT_EMPTY,
  ADMIND_ERR_CLUSTER_NOT_EMPTY,
  ADMIND_ERR_CONFIG_LOAD,
  ADMIND_ERR_UNKNOWN_NODENAME,
  ADMIND_ERR_UNKNOWN_GROUPNAME,
  ADMIND_ERR_UNKNOWN_DISK,
  ADMIND_ERR_UNKNOWN_FSNAME,
  ADMIND_ERR_UNKNOWN_NICNAME,
  ADMIND_ERR_TOO_MANY_DISKS,
  ADMIND_ERR_TOO_MANY_DISKS_IN_NODE,
  ADMIND_ERR_TOO_MANY_DISKS_IN_GROUP,
  ADMIND_ERR_DISK_ALREADY_ASSIGNED,
  ADMIND_ERR_CLUSTER_ALREADY_CREATED,
  ADMIND_ERR_GROUP_ALREADY_CREATED,
  ADMIND_ERR_VOLUME_ALREADY_CREATED,
  ADMIND_ERR_UNKNOWN_VOLUMENAME,
  ADMIND_ERR_METADATA_CORRUPTION,
  ADMIND_ERR_RESOURCE_IS_INVALID,
  ADMIND_ERR_VOLUME_ACCESS_MODE,
  ADMIND_ERR_VLTUNE_NON_APPLICABLE,
  ADMIND_WARN_DISK_RECOVER,
  ADMIND_ERR_LICENSE,
  ADMIND_WARN_LICENSE,
  ADMIND_ERR_INIT_SSL,
  ADMIND_ERR_DISK_ALIEN,
  ADMIND_ERR_UNKNOWN_DISK_UUID,
  ADMIND_ERR_WRONG_DISK_STATUS,
  ADMIND_ERR_MOVED_DISK,
  ADMIND_ERR_VOLUME_AS_DISK,
  ADMIND_ERR_CREATE_DIR,
  ADMIND_ERR_REMOVE_DIR,
  ADMIND_WARN_TOKEN_MANAGER_DISCONNECTED,
  ADMIND_ERR_INVALID_TOKEN_MANAGER,
  ADMIND_ERR_TM_TOO_MANY_NODES,
  VRT_INFO_GROUP_ALREADY_STARTED,
  VRT_INFO_GROUP_ALREADY_STOPPED,
  VRT_INFO_VOLUME_ALREADY_STARTED,
  VRT_INFO_VOLUME_ALREADY_STOPPED,
  VRT_INFO_VOLUME_ALREADY_EXPORTED,
  FS_INFO_ALREADY_STARTED,
  FS_INFO_ALREADY_STOPPED,
  RDEV_ERR_INVALID_DEVICE,
  RDEV_ERR_INVALID_BUFFER,
  RDEV_ERR_INVALID_OFFSET,
  RDEV_ERR_INVALID_SIZE,
  RDEV_ERR_BIG_ERROR,
  RDEV_ERR_NOT_SOCKET,
  RDEV_ERR_NOT_ENOUGH_RESOURCES,
  RDEV_ERR_UNKNOWN,
  RDEV_ERR_TOO_SMALL,
  RDEV_ERR_NOT_INITED,
  RDEV_ERR_INVALID_IOCTL,
  RDEV_ERR_NOT_OPEN,
  RDEV_ERR_REQUEST_TOO_BIG,
  RDEV_ERR_NOT_ENOUGH_MEMORY,
  RDEV_ERR_CANT_OPEN_DEVICE,
  RDEV_ERR_DISK_NOT_AVAILABLE,
  RDEV_ERR_DUPLICATE_ID,
  RDEV_WARN_IO_BARRIERS,
  RDEV_ERR_INVALID_BROKEN_DISK_TABLE,
  MD_ERR_START,
  MD_ERR_STOP,
  MD_ERR_STATUS,
  MD_ERR_AGENTX_NOT_ALIVE,
  LUN_ERR_INVALID_VALUE,
  LUN_ERR_ALREADY_ASSIGNED,
  LUN_ERR_NO_LUN_AVAILABLE,
  LUN_ERR_LUN_BUSY,
  VRT_WARN_DEV_ENTRY_REMOVAL,
  LUM_ERR_INVALID_EXPORT,
  LUM_ERR_INVALID_LUN,
  LUM_ERR_INVALID_IQN,
  LUM_ERR_INVALID_IQN_FILTER,
  LUM_ERR_INVALID_IQN_FILTER_POLICY,
  LUM_ERR_DUPLICATE_IQN_FILTER,
  LUM_ERR_IQN_FILTER_NOT_FOUND,
  LUM_ERR_TOO_MANY_IQN_FILTERS,
  LUM_ERR_INVALID_TARGET_CONFIG_FILE,
  LUM_ERR_INVALID_TARGET_CONFIG_PARAM,
  LUM_ERR_UNKNOWN_TARGET_CONFIG_PARAM
};
typedef enum exa_error_code exa_error_code;

enum exa_error_type {
  ERR_TYPE_SUCCESS,
  ERR_TYPE_ERROR,
  ERR_TYPE_INFO,
  ERR_TYPE_WARNING
};
typedef enum exa_error_type exa_error_type;

/* Given an error code, return the error message */
const char *exa_error_msg(exa_error_code);

exa_error_type get_error_type(exa_error_code err);

#ifdef __cplusplus
}
#endif

#endif
